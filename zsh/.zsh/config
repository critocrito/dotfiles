# Variables
ZSH="$HOME/.oh-my-zsh"
ANSIBLE_HOME="$HOME/.ansible"
NVM_HOME="$HOME/.nvm"

# Source oh-my-zsh if it is installed.
if [[ -d $ZSH ]]; then
  # Set name of the theme to load.
  ZSH_THEME="robbyrussell"

  # Enable auto updating for oh-my-zsh
  DISABLE_UPDATE_PROMPT=true

  # Customize the theme settings
  ZSH_THEME_GIT_PROMPT_PREFIX=" on %{$fg[magenta]%}"
  ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
  ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[green]%}!"
  ZSH_THEME_GIT_PROMPT_UNTRACKED="%{$fg[green]%}?"
  ZSH_THEME_GIT_PROMPT_CLEAN=""

  # Uncomment following line if you want red dots to be displayed while waiting for completion
  COMPLETION_WAITING_DOTS="true"

  # Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
  plugins=(git mercurial archlinux django python sprunge rvm rake ruby gem cabal cake docker git-extras wd)

  source $ZSH/oh-my-zsh.sh
fi

## Settings
setopt pushd_ignore_dups
setopt prompt_subst
setopt no_beep
setopt auto_cd
setopt multios

# Disable autocorrection
unsetopt correct_all
setopt appendhistory autocd

if [[ -n $SSH_CONNECTION ]]; then
  PROMPT='
$(prompt_time) $(prompt_username) at $(prompt_host) in $(prompt_pwd) $(git_prompt_info)
$(prompt_virtualenv)$(prompt_char) '
else
  PROMPT='
$(prompt_time) $(prompt_username) in $(prompt_pwd) $(git_prompt_info)
$(prompt_virtualenv)$(prompt_char) '
fi

#RPROMPT='[%* on %D]' 	# prompt for right side of screen

# Save the history, that should be enough
HISTFILE=~/.histfile
HISTSIZE=3000
SAVEHIST=3000

# Set a better terminal
if [ -z "$TMUX" ]; then
    export TERM='xterm-256color'
else
    export TERM='screen-256color'
fi

# Unset LC_ALL so the LC_COLLATE option in /etc/locale.conf takes precedence
export LC_ALL=
export PATH="$HOME/.cabal/bin:$HOME/Applications:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/usr/local/games:/usr/games:$HOME/.rvm.bin"
export PATH=${PATH}:~/android-dev/sdk/platform-tools:~/android-dev/sdk/tools
export EDITOR=/usr/bin/vim
export BROWSER=/usr/bin/firefox
export LANG=en_US.UTF-8

# Things I don't want to publish to github
[[ -s "$HOME/.secrets" ]] && source "$HOME/.secrets"

# Enable solarized dircolors
eval `dircolors ~/.dircolors`

# Emacs mode
bindkey -e

# Give me my bash style incremental search
bindkey '^R' history-incremental-search-backward

### Node Version Manager
[[ -f "$NVM_HOME/nvm.sh" ]] && source "$NVM_HOME/nvm.sh"

# USE AS DEFAULT PYTHON 2.7.2
#source $HOME/.pythonbrew/etc/bashrc
#pybrew use 2.7.3
#export WORKON_HOME=$HOME/.virtualenvs
#export VIRTUALENVWRAPPER_PYTHON=$HOME/.pythonbrew/pythons/Python-2.7.3/bin/python
#source $HOME/.pythonbrew/pythons/Python-2.7.3/bin/virtualenvwrapper.sh

# Attach to an existing tmux session or create a new one
#if which tmux 2>&1 >/dev/null; then
#    #if not inside a tmux session, and if no session is started, start a new session
#    test -z "$TMUX" && (tmux attach || tmux new-session)
#fi
#
# OR
#
# Start a tmux session on each login
#[[ $TERM != screen* ]] && exec tmux

# Use Ruby RVM
#[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Use the development version of ansible
[[ -f "$ANSIBLE_HOME/hacking/env-setup" ]] && source "$ANSIBLE_HOME/hacking/env-setup" -q

# If not running interactively, do not do anything
[[ $- != *i* ]] && return
# [[ $TERM != screen* ]] && exec tmux
