### Functions and Aliases
source ~/.functions
source ~/.aliases

### Options
# Changing directories
setopt auto_cd
setopt auto_pushd
setopt cdable_vars
setopt pushd_ignore_dups
setopt pushd_minus

# Expansion and Globbing
setopt no_nomatch

# Input/Output
setopt no_flow_control
setopt interactive_comments

# Job Control
setopt long_list_jobs

# Scripts and Functions
setopt multios

# Shell State
setopt login

# Zle
setopt no_beep

# Prompt expansion
setopt prompt_subst

# History
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history

# Completion
setopt always_to_end
setopt complete_in_word
setopt no_menu_complete
setopt auto_menu

[ $TERM = "dumb" ] && unset zle_bracketed_paste

### Cache
# Set ZSH_CACHE_DIR to the path where cache files should be created
# or else we will use the default cache/
[[ -z ${ZSH_CACHE_DIR} ]] && ZSH_CACHE_DIR="$XDG_CACHE_HOME/zsh"
mkdir -p $ZSH_CACHE_DIR

### Colors
autoload -U colors && colors
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
# Only GNU coreutils have dircolors, not so on Mac or other BSD's.
if is_linux; then eval "$(dircolors -b)"; fi

### History
# Configure the output format of the history command
[[ -z "$HISTFILE" ]] && HISTFILE=$HOME/.zsh_history

HISTSIZE=10000
SAVEHIST=10000
HIST_STAMPS="mm/dd/yyyy"

### Completion
autoload -U compinit && compinit
autoload -U +X bashcompinit && bashcompinit
zmodload -i zsh/complist

# case-insensitive, partial-word and then substring completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Fallback to built in ls colors
zstyle ':completion:*' list-colors ''

# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending

# Make the list prompt friendly
zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'

# Make the selection prompt friendly when there are a lot of choices
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'

# list of completers to use
zstyle ':completion:*::::' completer _expand _complete _ignored _approximate

zstyle ':completion:*:*:*:*:*' menu select=1 _complete _ignored _approximate

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm -w -w"

# disable named-directories autocompletion
zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories

# Use caching so that commands like apt and dpkg complete are useable
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion::complete:*' cache-path $ZSH_CACHE_DIR

# offer indexes before parameters in subscripts
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# formatting and messages
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
zstyle ':completion:*' group-name ''

# Don't complete uninteresting users
zstyle ':completion:*:*:*:users' ignored-patterns \
        adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna \
        clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm \
        gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm \
        ldap lp mail mailman mailnull man messagebus  mldonkey mysql nagios \
        named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn \
        operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd \
        rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp \
        usbmux uucp vcsa wwwrun xfs '_*'

# ignore completion functions (until the _ignored completer)
zstyle ':completion:*:functions' ignored-patterns '_*'
zstyle ':completion:*:scp:*' tag-order files users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
zstyle ':completion:*:scp:*' group-order files all-files users hosts-domain hosts-host hosts-ipaddr
zstyle ':completion:*:ssh:*' tag-order users 'hosts:-host hosts:-domain:domain hosts:-ipaddr"IP\ Address *'
zstyle ':completion:*:ssh:*' group-order hosts-domain hosts-host users hosts-ipaddr

# ... unless we really want to.
zstyle '*' single-ignored show

expand-or-complete-with-dots() {
  # toggle line-wrapping off and back on again
  [[ -n "$terminfo[rmam]" && -n "$terminfo[smam]" ]] && echoti rmam
  print -Pn "%{%F{red}......%f%}"
  [[ -n "$terminfo[rmam]" && -n "$terminfo[smam]" ]] && echoti smam

  zle expand-or-complete
  zle redisplay
}
zle -N expand-or-complete-with-dots

### Bindings
# Set the delimeter for the word kill,
# oh-my-zsh sets it to: WORDCHARS=''
# see http://stackoverflow.com/a/11200998
WORDCHARS='*?_[]&;!~#%^(){}<>'

# Make sure that the terminal is in application mode when zle is active, since
# only then values from $terminfo are valid
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
  function zle-line-init() {
    echoti smkx
  }
  function zle-line-finish() {
    echoti rmkx
  }
  zle -N zle-line-init
  zle -N zle-line-finish
fi

# Emacs key bindings
bindkey -e

# [Esc-w] - Kill from the cursor to the mark
bindkey '\ew' kill-region

# FIXME: I'm not sure why I need this mapping.
# [C-r] - Bash style incremental search backwards
bindkey '^r' history-incremental-search-backward
# [C-s] - bash style incremental search forwards
bindkey '^s' history-incremental-search-forward

# [Space] - Do history expansion
bindkey ' ' magic-space

# start typing + [Up-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcuu1]}" != "" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
# start typing + [Down-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != "" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# [Shift-Tab] - move through the completion menu backwards
if [[ "${terminfo[kcbt]}" != "" ]]; then
  bindkey "${terminfo[kcbt]}" reverse-menu-complete
fi

# [Backspace] - delete backward
bindkey '^?' backward-delete-char

# [Delete] - delete forward
if [[ "${terminfo[kdch1]}" != "" ]]; then
  bindkey "${terminfo[kdch1]}" delete-char
else
  bindkey "^[[3~" delete-char
  bindkey "^[3;5~" delete-char
  bindkey "\e[3~" delete-char
fi

# [Esc-m] - duplicate the word left of the cursor
bindkey '\em' copy-prev-shell-word

# Edit the current command line in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

# Keybindings
# [C-o] - Accept current selection
bindkey -M menuselect '^o' accept-and-infer-next-history

# [C-i] - Do an completion
bindkey "^I" expand-or-complete-with-dots

### Not sure what to do with that:
# The URL stuff is shamelessly stolen from oh-my-zsh.
## Load smart urls if available
# bracketed-paste-magic is known buggy in zsh 5.1.1 (only), so skip it there; see #4434
autoload -Uz is-at-least
if [[ $ZSH_VERSION != 5.1.1 ]]; then
  for d in $fpath; do
  	if [[ -e "$d/url-quote-magic" ]]; then
  		if is-at-least 5.1; then
  			autoload -Uz bracketed-paste-magic
  			zle -N bracketed-paste bracketed-paste-magic
  		fi
  		autoload -Uz url-quote-magic
  		zle -N self-insert url-quote-magic
      break
  	fi
  done
fi

### Load shell snippets
[[ -f ~/.rc ]] && source ~/.rc

### The prompt
case "$TERM" in
  "dumb")
    RPROMPT=""
    PROMPT="> "
    ;;
  *)
    RPROMPT=""
    PROMPT='
$(prompt_info)
$(prompt_prompt) '
esac

# use .localrc for settings specific to one system
[[ -f ~/.localrc ]] && source ~/.localrc
